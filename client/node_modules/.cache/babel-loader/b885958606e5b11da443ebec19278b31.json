{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\almah\\\\Downloads\\\\NG\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Axios from 'axios';\nimport { Input, Button, Dropdown, Menu } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [BossName, setBossName] = useState(\"\");\n  const [EmployeeName, setEmployeeName] = useState(\"\");\n  const [BossInput, setBossInput] = useState(\"\");\n  const [EmployeeInput, setEmployeeInput] = useState(\"\");\n  const [BossInputsList, setBossInputsList] = useState([]);\n  const [EmployeeTasksRequired, setEmployeeTasksRequired] = useState(0);\n  const [EmployeeTasksCompleted, setEmployeeTasksCompleted] = useState(0);\n  const [EmployeeInputsList, setEmployeeInputsList] = useState([]);\n  const [mathResult, setMathResult] = useState(0);\n\n  const addBossTask = () => {\n    Axios.post('http://localhost:3001/addBossTask', {\n      BossName: BossName,\n      BossInput: BossInput\n    }).then(() => {\n      setBossInputsList([...BossInputsList, {\n        bossName: BossName,\n        bossTask: BossInput\n      }]);\n    });\n  };\n\n  const addEmployeeTask = () => {\n    Axios.post('http://localhost:3001/addEmployeeTask', {\n      EmployeeName: EmployeeName,\n      EmployeeInput: EmployeeInput,\n      EmployeeTasksRequired: EmployeeTasksRequired,\n      EmployeeTasksCompleted: EmployeeTasksCompleted\n    }).then(() => {\n      setEmployeeInputsList([...EmployeeInputsList, {\n        employeeName: EmployeeName,\n        employeeTask: EmployeeInput,\n        tasksReq: EmployeeTasksRequired,\n        tasksLeft: EmployeeTasksCompleted\n      }]);\n    });\n  };\n\n  const showBossTask = () => {\n    Axios.get('http://localhost:3001/showBossTasks').then(response => {\n      setBossInputsList(response.data);\n    });\n  };\n\n  const showEmployeeTask = () => {\n    Axios.get('http://localhost:3001/showEmployeeTasks').then(response => {\n      setEmployeeInputsList(response.data);\n    });\n  }; //const calculate = (tasksReq, tasksLeft)=>{\n  //console.log(tasksReq);\n  //console.log(tasksLeft);\n  //setMathResult( evaluate('(100 / {tasksReq})*{tasksLeft}' ) )\n  //console.log(mathResult);\n  //let division = 100/tasksReq;\n  //let result = division*tasksLeft;\n  //console.log('the result is', result);\n  //const setMathResult = result;\n  //return(\n  //mathResult\n  //)\n  //}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AssigningTask\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your Name\",\n        onChange: event => {\n          setBossName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Assign Task...\",\n        onChange: event => {\n          setBossInput(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Submit\",\n        primary: true,\n        onClick: addBossTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Show All\",\n        secondary: true,\n        onClick: showBossTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), BossInputsList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showAllTasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"By: \", val.bossName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: val.bossTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"responseTask\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your Name\",\n        onChange: event => {\n          setEmployeeName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"What tasks did you complete today?\",\n        onChange: event => {\n          setEmployeeInput(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasksInput\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Tasks Required\",\n          onChange: event => {\n            setEmployeeTasksRequired(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Tasks Completed\",\n          onChange: event => {\n            setEmployeeTasksCompleted(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Submit\",\n        primary: true,\n        onClick: addEmployeeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Show All\",\n        onClick: showEmployeeTask,\n        secondary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), EmployeeInputsList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showAllTasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"By: \", val.employeeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: val.employeeTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"percentageCompleted\",\n            children: [/*#__PURE__*/_jsxDEV(\"p2\", {\n              children: \"Percentage Completed: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p2\", {\n              children: [100 / val.tasksReq * val.tasksLeft, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7pUycDIGCoITdnvUQYPu/JDcZIc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/almah/Downloads/NG/client/src/App.js"],"names":["useState","Axios","Input","Button","Dropdown","Menu","App","BossName","setBossName","EmployeeName","setEmployeeName","BossInput","setBossInput","EmployeeInput","setEmployeeInput","BossInputsList","setBossInputsList","EmployeeTasksRequired","setEmployeeTasksRequired","EmployeeTasksCompleted","setEmployeeTasksCompleted","EmployeeInputsList","setEmployeeInputsList","mathResult","setMathResult","addBossTask","post","then","bossName","bossTask","addEmployeeTask","employeeName","employeeTask","tasksReq","tasksLeft","showBossTask","get","response","data","showEmployeeTask","event","target","value","map","val","key"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Axios from 'axios';\nimport { \n  Input, \n  Button,\n  Dropdown,\n  Menu,\n} from 'semantic-ui-react'\n\n\nfunction App() {\n  const [BossName, setBossName] = useState(\"\");\n  const [EmployeeName, setEmployeeName] =useState(\"\");\n\n  const [BossInput, setBossInput] = useState(\"\");\n  const [EmployeeInput, setEmployeeInput] = useState(\"\");\n\n  const [BossInputsList, setBossInputsList] = useState([]);\n\n  const [EmployeeTasksRequired, setEmployeeTasksRequired] = useState(0);\n  const [EmployeeTasksCompleted, setEmployeeTasksCompleted] = useState(0);\n  const [EmployeeInputsList, setEmployeeInputsList] = useState([]);\n\n  const [mathResult, setMathResult] = useState(0);\n\n\n  const addBossTask = ()=>{\n    Axios.post('http://localhost:3001/addBossTask', {\n      BossName: BossName,\n      BossInput: BossInput,\n    }).then( ()=>{\n      setBossInputsList([...BossInputsList, {\n        bossName: BossName,\n        bossTask: BossInput,\n      }])\n    })\n  }\n\n  const addEmployeeTask = ()=>{\n    Axios.post('http://localhost:3001/addEmployeeTask', {\n      EmployeeName: EmployeeName,\n      EmployeeInput: EmployeeInput,\n      EmployeeTasksRequired: EmployeeTasksRequired,\n      EmployeeTasksCompleted: EmployeeTasksCompleted,\n    }).then(()=>{\n      setEmployeeInputsList([...EmployeeInputsList, {\n        employeeName: EmployeeName,\n        employeeTask: EmployeeInput,\n        tasksReq: EmployeeTasksRequired,\n        tasksLeft: EmployeeTasksCompleted,\n      }])\n    })\n  }\n\n  const showBossTask = ()=>{\n    Axios.get('http://localhost:3001/showBossTasks').then((response)=>{\n      setBossInputsList(response.data);\n    })\n  }\n\n  const showEmployeeTask = ()=>{\n    Axios.get('http://localhost:3001/showEmployeeTasks').then((response)=>{\n      setEmployeeInputsList(response.data);\n    })\n  }\n\n  //const calculate = (tasksReq, tasksLeft)=>{\n    //console.log(tasksReq);\n    //console.log(tasksLeft);\n    //setMathResult( evaluate('(100 / {tasksReq})*{tasksLeft}' ) )\n    //console.log(mathResult);\n    //let division = 100/tasksReq;\n    //let result = division*tasksLeft;\n    //console.log('the result is', result);\n    //const setMathResult = result;\n    //return(\n      //mathResult\n    //)\n  //}\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"AssigningTask\">\n        <Input placeholder='Your Name' onChange={(event)=> {setBossName(event.target.value)}}/>\n        <Input placeholder='Assign Task...' onChange={(event)=> {setBossInput(event.target.value)}}/>\n        <Button content='Submit' primary onClick={addBossTask}/>\n        <Button content='Show All' secondary onClick={showBossTask} />\n        {BossInputsList.map((val,key)=>{\n          return(\n            <div className=\"showAllTasks\">\n              <h1>By: {val.bossName}</h1>\n              <p1>{val.bossTask}</p1>\n            </div>\n          )\n        })}\n      </div>\n\n      <hr/>\n\n      <div className=\"responseTask\">\n        <Input placeholder='Your Name' onChange={(event)=> {setEmployeeName(event.target.value)}}/>\n        <Input placeholder='What tasks did you complete today?' onChange={ (event)=> {setEmployeeInput(event.target.value) }}/>\n        <div className=\"tasksInput\">\n          <Input placeholder='Tasks Required' onChange={ (event)=> {setEmployeeTasksRequired(event.target.value)} }/>\n          <Input placeholder='Tasks Completed' onChange={ (event)=> {setEmployeeTasksCompleted(event.target.value)} }/>\n        </div>\n        <Button content='Submit' primary onClick={addEmployeeTask}/>\n        <Button content='Show All' onClick={showEmployeeTask}secondary /> \n        {EmployeeInputsList.map((val,key)=>{\n          return(\n            <div className=\"showAllTasks\">\n              <h1>By: {val.employeeName}</h1>\n              <p1>{val.employeeTask}</p1>\n              <br></br>\n              <br></br>\n              <div className=\"percentageCompleted\">\n                <p2>Percentage Completed: </p2>\n                <p2>{(100/val.tasksReq)*val.tasksLeft}%</p2>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}