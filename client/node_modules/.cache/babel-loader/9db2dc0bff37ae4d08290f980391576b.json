{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\almah\\\\Downloads\\\\NG\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Axios from 'axios';\nimport { Input, Button, Dropdown, Menu } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [BossName, setBossName] = useState(\"\");\n  const [EmployeeName, setEmployeeName] = useState(\"\");\n  const [BossInput, setBossInput] = useState(\"\");\n  const [EmployeeInput, setEmployeeInput] = useState(\"\");\n  const [BossInputsList, setBossInputsList] = useState([]);\n  const [EmployeeTasksRequired, setEmployeeTasksRequired] = useState(0);\n  const [EmployeeTasksCompleted, setEmployeeTasksCompleted] = useState(0);\n  const [EmployeeInputsList, setEmployeeInputsList] = useState([]);\n  const [Priority, setPriority] = useState(\"\");\n\n  const addBossTask = () => {\n    Axios.post('http://localhost:3001/addBossTask', {\n      BossName: BossName,\n      BossInput: BossInput,\n      Priority: Priority\n    }).then(() => {\n      setBossInputsList([...BossInputsList, {\n        bossName: BossName,\n        bossTask: BossInput,\n        priority: Priority\n      }]);\n    });\n  };\n\n  const addEmployeeTask = () => {\n    Axios.post('http://localhost:3001/addEmployeeTask', {\n      EmployeeName: EmployeeName,\n      EmployeeInput: EmployeeInput,\n      EmployeeTasksRequired: EmployeeTasksRequired,\n      EmployeeTasksCompleted: EmployeeTasksCompleted\n    }).then(() => {\n      setEmployeeInputsList([...EmployeeInputsList, {\n        employeeName: EmployeeName,\n        employeeTask: EmployeeInput,\n        tasksReq: EmployeeTasksRequired,\n        tasksLeft: EmployeeTasksCompleted\n      }]);\n    });\n  };\n\n  const showBossTask = () => {\n    Axios.get('http://localhost:3001/showBossTasks').then(response => {\n      setBossInputsList(response.data);\n    });\n  };\n\n  const showEmployeeTask = () => {\n    Axios.get('http://localhost:3001/showEmployeeTasks').then(response => {\n      setEmployeeInputsList(response.data);\n    });\n  };\n\n  const options = [{\n    key: 1,\n    text: 'Low',\n    value: 'low'\n  }, {\n    key: 2,\n    text: 'Medium',\n    value: 'medium'\n  }, {\n    key: 3,\n    text: 'High',\n    value: 'high'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AssigningTask\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your Name\",\n        onChange: event => {\n          setBossName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Assign Task...\",\n        onChange: event => {\n          setBossInput(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 350,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          compact: true,\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            text: \"Priority\",\n            options: options,\n            simple: true,\n            item: true,\n            onChange: event => {\n              setPriority(event.target.textContent);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Submit\",\n        primary: true,\n        onClick: addBossTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Show All\",\n        secondary: true,\n        onClick: showBossTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), BossInputsList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showAllTasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"By: \", val.bossName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: val.bossTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p2\", {\n              children: [\"Priority: \", val.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"responseTask\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Your Name\",\n        onChange: event => {\n          setEmployeeName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"What tasks did you complete today?\",\n        onChange: event => {\n          setEmployeeInput(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasksInput\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Tasks Required\",\n          onChange: event => {\n            setEmployeeTasksRequired(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Tasks Completed\",\n          onChange: event => {\n            setEmployeeTasksCompleted(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Submit\",\n        primary: true,\n        onClick: addEmployeeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Show All\",\n        onClick: showEmployeeTask,\n        secondary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), EmployeeInputsList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showAllTasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"By: \", val.employeeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: val.employeeTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"percentageCompleted\",\n            children: [/*#__PURE__*/_jsxDEV(\"p2\", {\n              children: \"Percentage Completed: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p2\", {\n              children: [100 / val.tasksReq * val.tasksLeft, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"joBgSTTtdFDy1M/SAq2WYO/f3IQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/almah/Downloads/NG/client/src/App.js"],"names":["useState","Axios","Input","Button","Dropdown","Menu","App","BossName","setBossName","EmployeeName","setEmployeeName","BossInput","setBossInput","EmployeeInput","setEmployeeInput","BossInputsList","setBossInputsList","EmployeeTasksRequired","setEmployeeTasksRequired","EmployeeTasksCompleted","setEmployeeTasksCompleted","EmployeeInputsList","setEmployeeInputsList","Priority","setPriority","addBossTask","post","then","bossName","bossTask","priority","addEmployeeTask","employeeName","employeeTask","tasksReq","tasksLeft","showBossTask","get","response","data","showEmployeeTask","options","key","text","value","event","target","marginLeft","marginTop","marginBottom","textContent","map","val"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Axios from 'axios';\nimport { \n  Input, \n  Button,\n  Dropdown,\n  Menu,\n} from 'semantic-ui-react'\n\n\nfunction App() {\n  const [BossName, setBossName] = useState(\"\");\n  const [EmployeeName, setEmployeeName] =useState(\"\");\n\n  const [BossInput, setBossInput] = useState(\"\");\n  const [EmployeeInput, setEmployeeInput] = useState(\"\");\n\n  const [BossInputsList, setBossInputsList] = useState([]);\n\n  const [EmployeeTasksRequired, setEmployeeTasksRequired] = useState(0);\n  const [EmployeeTasksCompleted, setEmployeeTasksCompleted] = useState(0);\n  const [EmployeeInputsList, setEmployeeInputsList] = useState([]);\n\n  const [Priority, setPriority] = useState(\"\");\n  \n\n  const addBossTask = ()=>{\n    Axios.post('http://localhost:3001/addBossTask', {\n      BossName: BossName,\n      BossInput: BossInput,\n      Priority: Priority,\n    }).then( ()=>{\n      setBossInputsList([...BossInputsList, {\n        bossName: BossName,\n        bossTask: BossInput,\n        priority: Priority,\n      }])\n    })\n  }\n\n  const addEmployeeTask = ()=>{\n    Axios.post('http://localhost:3001/addEmployeeTask', {\n      EmployeeName: EmployeeName,\n      EmployeeInput: EmployeeInput,\n      EmployeeTasksRequired: EmployeeTasksRequired,\n      EmployeeTasksCompleted: EmployeeTasksCompleted,\n    }).then(()=>{\n      setEmployeeInputsList([...EmployeeInputsList, {\n        employeeName: EmployeeName,\n        employeeTask: EmployeeInput,\n        tasksReq: EmployeeTasksRequired,\n        tasksLeft: EmployeeTasksCompleted,\n      }])\n    })\n  }\n\n  const showBossTask = ()=>{\n    Axios.get('http://localhost:3001/showBossTasks').then((response)=>{\n      setBossInputsList(response.data);\n    })\n  }\n\n  const showEmployeeTask = ()=>{\n    Axios.get('http://localhost:3001/showEmployeeTasks').then((response)=>{\n      setEmployeeInputsList(response.data);\n    })\n  }\n\n  const options = [\n    { key: 1, text: 'Low', value: 'low' },\n    { key: 2, text: 'Medium', value: 'medium' },\n    { key: 3, text: 'High', value: 'high' },\n  ]\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"AssigningTask\">\n        <Input placeholder='Your Name' onChange={(event)=> {setBossName(event.target.value)}}/>\n        <Input placeholder='Assign Task...' onChange={(event)=> {setBossInput(event.target.value)}}/>\n        <div style={{marginLeft: 350, marginTop: 10, marginBottom:10}}>\n          <Menu compact>\n            <Dropdown text='Priority' options={options} simple item onChange={(event)=> {setPriority(event.target.textContent)}}/>\n          </Menu> \n        </div>\n        <Button content='Submit' primary onClick={addBossTask}/>\n        <Button content='Show All' secondary onClick={showBossTask} />\n        \n        \n        {BossInputsList.map((val,key)=>{\n          return(\n            <div className=\"showAllTasks\">\n              <h1>By: {val.bossName}</h1>\n              <p1>{val.bossTask}</p1>\n              <div>\n              <p2>Priority: {val.priority}</p2>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n\n      <hr/>\n\n      <div className=\"responseTask\">\n        <Input placeholder='Your Name' onChange={(event)=> {setEmployeeName(event.target.value)}}/>\n        <Input placeholder='What tasks did you complete today?' onChange={ (event)=> {setEmployeeInput(event.target.value) }}/>\n        <div className=\"tasksInput\">\n          <Input placeholder='Tasks Required' onChange={ (event)=> {setEmployeeTasksRequired(event.target.value)} }/>\n          <Input placeholder='Tasks Completed' onChange={ (event)=> {setEmployeeTasksCompleted(event.target.value)} }/>\n        </div>\n        <Button content='Submit' primary onClick={addEmployeeTask}/>\n        <Button content='Show All' onClick={showEmployeeTask}secondary /> \n        {EmployeeInputsList.map((val,key)=>{\n          return(\n            <div className=\"showAllTasks\">\n              <h1>By: {val.employeeName}</h1>\n              <p1>{val.employeeTask}</p1>\n              <br></br>\n              <br></br>\n              <div className=\"percentageCompleted\">\n                <p2>Percentage Completed: </p2>\n                <p2>{(100/val.tasksReq)*val.tasksLeft}%</p2>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}